spring:
  application:
    name: epeius-admin
  rabbitmq:
    host: 192.168.43.90
    port: 5672
    username: admin
    password: admin
server:
  port: 9008
  undertow:
    max-http-post-size: -1B
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程,数量和CPU 内核数目一样即可
    io-threads: 4
    # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载  io-threads*8
    worker-threads: 100
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 1024
    # 每个区分配的buffer数量 , 所以pool的大小是buffer-size * buffers-per-region
    #   buffers-per-region: 1024 # 这个参数不需要写了
    # 是否分配的直接内存
    direct-buffers: true

#---- Actuator 服务监控配置 ----#
management:
  endpoints:
    web:
      exposure:
        include: "*" # 健康检查暴露的内容
  endpoint:
    health:
      show-details: always

#----  epeius 配置---#
epeius:
  security:
    browser:
      loginPage: /epeius-login.html
      loginResponseType: JSON

#----- Swagger 配置 ------#
swagger:
  show: true  # 是否展示UI界面和嵌入swagger
  scan-package: com.xxxx.epeius.admin # 扫描的包地址
  info:
    title: 接口文档 # API 文档标题
    contact: # 联系信息
      name: arrows # 名字
      url: http://www.github.com # 主页地址
      email: shangmlee@foxmail.com # 邮箱